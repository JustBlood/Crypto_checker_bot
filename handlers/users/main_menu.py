import logging

import time

from aiogram import types

from DB_work.get_db_names import get_db_names
from keyboards.default import main_kb, MAIN_KB_BUTTONS
from states import EnterCrypto, CheckCryptoNow
from loader import dp

# Initialise logger_info
logging.basicConfig(level=logging.INFO)

@dp.message_handler(text=[button for button in MAIN_KB_BUTTONS])
async def handler_messages(message: types.Message):
    """–ó–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –∫–æ–º–º–∞–Ω–¥ –±–æ—Ç–∞"""

    '''1-4 –∫–æ–º–º–∞–Ω–¥—ã'''
    logging.info('–ë—ã–ª–∞ –≤–≤–µ–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é')
    if message.text == main_kb.keyboard[0][0]['text']:
        logging.info(f'–í—ã–±—Ä–∞–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ {message.text}')
        all_names = get_db_names()
        await message.answer(text='üí± –í—Å–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã, –Ω–∞—Ö–æ–¥—è—â–∏–µ—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n' + all_names)
    elif message.text == main_kb.keyboard[0][1]['text']:
        logging.info(f'–í—ã–±—Ä–∞–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ {message.text}')
        await message.answer('‚ùì –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã:', reply_markup=types.ReplyKeyboardRemove())
        await EnterCrypto.inputing_crypto.set()
    elif message.text == main_kb.keyboard[1][0]['text']:
        logging.info(f'–í—ã–±—Ä–∞–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ {message.text}')
        await message.answer('‚ùì –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã:', reply_markup=types.ReplyKeyboardRemove())
        await CheckCryptoNow.inputing_crypto.set()
    elif message.text == main_kb.keyboard[1][1]['text']:
        logging.info(f'–í—ã–±—Ä–∞–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ {message.text}')
        await message.answer('–°–µ–π—á–∞—Å —è —Ç–µ–±–µ –≤—Å—ë –ø–æ–≤–µ–¥–∞—é, –¥—Ä—É–≥ –º–æ–π üòâ')
        time.sleep(1)
        await message.answer('1Ô∏è‚É£ –ö–æ–º–∞–Ω–¥–∞ (üü† –ö—Ä–∏–ø—Ç–∞ –≤ –±–∞–∑–µ) –≤—ã—Å—ã–ª–∞–µ—Ç —Ç–µ–±–µ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–º—ë–Ω –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç, –∫–æ—Ç–æ—Ä—ã–µ —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –Ω–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö\n\n'
                             '2Ô∏è‚É£ –ö–æ–º–∞–Ω–¥–∞ (üü° –í–∑—è—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∫—Ä–∏–ø—Ç—ã –ø–æ –∏–º–µ–Ω–∏) –ø–æ–ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ —Ç–µ–±—è –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –≤ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä–µ, —Ç.–µ. –ø–æ —Ñ–æ—Ä–º–µ (–ö—Ä–∏–ø—Ç–∞–í–∞–ª—é—Ç–∞).\n'
                             '–í—Å—ë –ø—Ä–æ—â–µ, —á–µ–º –∫–∞–∂–µ—Ç—Å—è, —ç—Ç–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä, BTCUSD –∏–ª–∏ ETHUSDT\n'
                             '–î–∞–ª–µ–µ —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ —Ñ–∞–π–ª —Ñ–æ—Ä–º–∞—Ç–∞ Exel —Ç–∞–±–ª–∏—Ü (csv) —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏(–∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –∑–∞–ø–∏—Å—è–º–∏ 1 —á–∞—Å)\n\n'
                             '3Ô∏è‚É£ –ö–æ–º–∞–Ω–¥–∞ (üü¢ –£–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å –∫—Ä–∏–ø—Ç—ã –ø–æ –∏–º–µ–Ω–∏) —Ç–∞–∫–∂–µ –ø–æ–ø—Ä–æ—Å–∏—Ç —Ç–µ–±—è –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –≤ –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä–µ (—Å–º. 2Ô∏è‚É£ –∫–æ–º–∞–Ω–¥—É)\n'
                             '–ò –¥–∞–ª–µ–µ –ø—Ä–∏—à–ª—ë—Ç —Ç–µ–±–µ —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å –≤–≤–µ–¥—ë–Ω–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã\n\n'
                             '4Ô∏è‚É£ –ö–æ–º–∞–Ω–¥–∞ (‚ö™ –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–æ–º–∞–Ω–¥–∞—Ö) –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ —ç—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ üòÑ\n\n'
                             '‚úÖ –í–æ—Ç –∏ –≤—Å—ë! –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!\n(–ù—É –∂–µ, —Å–∫–æ—Ä–µ–µ –∏–¥–∏ –ø—Ä–æ–±–æ–≤–∞—Ç—å!)')